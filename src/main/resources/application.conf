akka {
  loggers = ["akka.event.slf4j.Slf4jLogger"]
  loglevel = DEBUG
  stdout-loglevel = DEBUG
  logging-filter = "akka.event.slf4j.Slf4jLoggingFilter"
  logger-startup-timeout = 30s

  actor {
    provider = "cluster"

    default-dispatcher {
      type = Dispatcher
      executor = fork-join-executor
      fork-join-executor {
        parallelism-min = 2
        parallelism-factor = 8.0
        parallelism-max = 10
      }
      shutdown-timeout = 1s
      throughput = 1
    }
    debug {
      unhandled = on
    }

    serializers {
      kryo = "com.twitter.chill.akka.AkkaSerializer"
    }

    serialization-bindings {
      "java.io.Serializable" = none
    }
  }
  remote {
    enabled-transports = ["akka.remote.netty.tcp"]
    log-remote-lifecycle-events = off
    netty.tcp {
      hostname = ${clustering.ip}
      port = ${clustering.port}
    }
  }

  cluster {
    roles = ["seed"]
    failure-detector {
      threshold = 12
      acceptable-heartbeat-pause = 10 s
    }
    seed-nodes = [
       "akka.tcp://"${clustering.cluster.name}"@"${clustering.seed-ip}":"${clustering.seed-port}
     ]
    // auto-down-unreachable-after = 10s
  }
}

clustering {
 ip = "127.0.0.1"
 ip = ${?CLUSTER_IP}
 port = 1600
 port = ${?CLUSTER_PORT}
 seed-ip = "127.0.0.1"
 seed-ip = ${?CLUSTER_IP}
 seed-ip = ${?SEED_PORT_1600_TCP_ADDR}
 seed-port = 1600
 seed-port = ${?SEED_PORT_1600_TCP_PORT}
 cluster.name = clustering-cluster
}

mysql = {
  profile = "slick.jdbc.MySQLProfile$"
  db {
    driver = com.mysql.cj.jdbc.Driver
    url = "jdbc:mysql://localhost/comic-cloud-oauth2?useSSL=false&useUnicode=true&characterEncoding=UTF-8&serverTimezone=UTC"
    user = "root"
    password = "root"
    connectionPool = "HikariCP"
  }
}

service {
  http {
    interface = "0.0.0.0"
    port = 9000
  }

  authentication {
    access-token-life-in-seconds = 3600
  }
}